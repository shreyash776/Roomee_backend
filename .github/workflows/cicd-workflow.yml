name: CICD

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-app:latest .

      - name: Publish image to docker hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker rm -f nodejs-app-container || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/nodejs-app:latest
            docker run -d -p 3000:3000 \
              --name nodejs-app-container \
              -e "PORT=${{ secrets.PORT }}" \
              -e "MONGO_URI=${{ secrets.MONGO_URI }}" \
              -e "JWT_SECRET=${{ secrets.JWT_SECRET }}" \
              -e "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
              -e "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" \
              -e "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" \
              ${{ secrets.DOCKER_USERNAME }}/nodejs-app:latest
